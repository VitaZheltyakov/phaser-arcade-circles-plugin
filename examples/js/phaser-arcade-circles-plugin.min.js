/************ Phaser Arcade Circles plugin by Vitaliy Zheltyakov **************/
(function(window,Phaser){Phaser.Physics.Arcade.prototype.intersects=function(body1,body2){if(body1.isCircle&&body2.isCircle)return this.distanceBetweenCenters(body1,body2)<=body1.radius+body2.radius;else if(!body1.isCircle&&!body2.isCircle){if(body1.right<=body2.position.x)return false;if(body1.bottom<=body2.position.y)return false;if(body1.position.x>=body2.right)return false;if(body1.position.y>=body2.bottom)return false}else if(body1.isCircle!==body2.isCircle){var rect={};rect.x=body2.isCircle?
body1.position.x:body2.position.x;rect.y=body2.isCircle?body1.position.y:body2.position.y;rect.right=body2.isCircle?body1.right:body2.right;rect.bottom=body2.isCircle?body1.bottom:body2.bottom;var circle={};circle.x=body1.isCircle?body1.position.x+body1.radius:body2.position.x+body2.radius;circle.y=body1.isCircle?body1.position.y+body1.radius:body2.position.y+body2.radius;circle.radius=body1.isCircle?body1.radius:body2.radius;if(circle.y<rect.y){if(circle.x<rect.x)return(circle.x-rect.x)*(circle.x-
rect.x)+(circle.y-rect.y)*(circle.y-rect.y)<=circle.radius*circle.radius;if(circle.x>rect.right)return(circle.x-rect.right)*(circle.x-rect.right)+(circle.y-rect.y)*(circle.y-rect.y)<=circle.radius*circle.radius;return rect.y-circle.y<=circle.radius}if(circle.y>rect.bottom){if(circle.x<rect.x)return(circle.x-rect.x)*(circle.x-rect.x)+(circle.y-rect.bottom)*(circle.y-rect.bottom)<=circle.radius*circle.radius;if(circle.x>rect.right)return(circle.x-rect.right)*(circle.x-rect.right)+(circle.y-rect.bottom)*
(circle.y-rect.bottom)<=circle.radius*circle.radius;return circle.y-rect.bottom<=circle.radius}if(circle.x<rect.x)return rect.x-circle.x<=circle.radius;if(circle.x>rect.right)return circle.x-rect.right<=circle.radius;return circle.x-rect.x<=circle.radius||rect.right-circle.x<=circle.radius||circle.y-rect.y<=circle.radius||rect.bottom-circle.y<=circle.radius}return true};Phaser.Physics.Arcade.prototype.getOverlapX=function(body1,body2){var overlap=0;var maxOverlap=body1.deltaAbsX()+body2.deltaAbsX()+
this.OVERLAP_BIAS;if(body1.isCircle)maxOverlap+=body1.radius;if(body2.isCircle)maxOverlap+=body2.radius;if(body1.deltaX()===0&&body2.deltaX()===0){body1.embedded=true;body2.embedded=true}else if(body1.deltaX()>body2.deltaX()){overlap=body1.right-body2.x;if(overlap>maxOverlap||body1.checkCollision.right===false||body2.checkCollision.left===false)overlap=0;else{body1.touching.none=false;body1.touching.right=true;body2.touching.none=false;body2.touching.left=true}}else if(body1.deltaX()<body2.deltaX()){overlap=
body1.x-body2.width-body2.x;if(-overlap>maxOverlap||body1.checkCollision.left===false||body2.checkCollision.right===false)overlap=0;else{body1.touching.none=false;body1.touching.left=true;body2.touching.none=false;body2.touching.right=true}}body1.overlapX=overlap;body2.overlapX=overlap;return overlap};Phaser.Physics.Arcade.prototype.getOverlapY=function(body1,body2){var overlap=0;var maxOverlap=body1.deltaAbsY()+body2.deltaAbsY()+this.OVERLAP_BIAS;if(body1.isCircle)maxOverlap+=body1.radius;if(body2.isCircle)maxOverlap+=
body2.radius;if(body1.deltaY()===0&&body2.deltaY()===0){body1.embedded=true;body2.embedded=true}else if(body1.deltaY()>body2.deltaY()){overlap=body1.bottom-body2.y;if(overlap>maxOverlap||body1.checkCollision.down===false||body2.checkCollision.up===false)overlap=0;else{body1.touching.none=false;body1.touching.down=true;body2.touching.none=false;body2.touching.up=true}}else if(body1.deltaY()<body2.deltaY()){overlap=body1.y-body2.bottom;if(-overlap>maxOverlap||body1.checkCollision.up===false||body2.checkCollision.down===
false)overlap=0;else{body1.touching.none=false;body1.touching.up=true;body2.touching.none=false;body2.touching.down=true}}body1.overlapY=overlap;body2.overlapY=overlap;return overlap};Phaser.Physics.Arcade.prototype.separateX=function(body1,body2,overlapOnly){var overlap=this.getOverlapX(body1,body2);if(overlapOnly||overlap===0||body1.immovable&&body2.immovable||body1.customSeparateX||body2.customSeparateX)return overlap!==0;if(body1.isCircle!==body2.isCircle){var collisionAsCircle=false;var rect=
{};rect.x=body2.isCircle?body1.position.x:body2.position.x;rect.y=body2.isCircle?body1.position.y:body2.position.y;rect.right=body2.isCircle?body1.right:body2.right;rect.bottom=body2.isCircle?body1.bottom:body2.bottom;var circle={};circle.x=body1.isCircle?body1.position.x+body1.radius:body2.position.x+body2.radius;circle.y=body1.isCircle?body1.position.y+body1.radius:body2.position.y+body2.radius;if(circle.y<rect.y){if(circle.x<rect.x)collisionAsCircle=true;if(circle.x>rect.right)collisionAsCircle=
true}if(circle.y>rect.bottom){if(circle.x<rect.x)collisionAsCircle=true;if(circle.x>rect.right)collisionAsCircle=true}}if(body1.isCircle&&body2.isCircle||collisionAsCircle)var angleCollision=this.angleBetween(body1,body2);var v1=body1.velocity.x;var v2=body2.velocity.x;if(!body1.immovable&&!body2.immovable)if(body1.isCircle&&body2.isCircle||collisionAsCircle){body1.x-=overlap>0?-(body1.deltaAbsX()+body2.deltaAbsX()):body1.deltaAbsX()+body2.deltaAbsX();body2.x+=overlap>0?body1.deltaAbsX()+body2.deltaAbsX():
-(body1.deltaAbsX()+body2.deltaAbsX());var nv1=Math.sqrt(v2*v2*body2.mass/body1.mass)*(v2>0?1:-1);var nv2=Math.sqrt(v1*v1*body1.mass/body2.mass)*(v1>0?1:-1);var avg=(nv1+nv2)*.5;nv1-=avg;nv2-=avg;body1.velocity.x=(avg+nv1*body1.bounce.x)*Math.cos(angleCollision)*Math.cos(angleCollision);body1.velocity.y=-(avg+nv1*body1.bounce.y)*Math.cos(angleCollision)*Math.sin(angleCollision);body2.velocity.x=(avg+nv2*body2.bounce.x)*Math.cos(angleCollision)*Math.cos(angleCollision);body2.velocity.y=(avg+nv2*body2.bounce.y)*
Math.cos(angleCollision)*Math.sin(angleCollision)}else{if(!body1.isCircle&&!body2.isCircle||!collisionAsCircle){overlap*=.5;body1.x-=overlap;body2.x+=overlap;var nv1=Math.sqrt(v2*v2*body2.mass/body1.mass)*(v2>0?1:-1);var nv2=Math.sqrt(v1*v1*body1.mass/body2.mass)*(v1>0?1:-1);var avg=(nv1+nv2)*.5;nv1-=avg;nv2-=avg;body1.velocity.x=avg+nv1*body1.bounce.x;body2.velocity.x=avg+nv2*body2.bounce.x}}else if(!body1.immovable)if(body1.isCircle&&body2.isCircle||collisionAsCircle){body1.x+=overlap>0?-(body1.deltaAbsX()+
body2.deltaAbsX()):body1.deltaAbsX()+body2.deltaAbsX();body1.velocity.x=(v2-v1*body1.bounce.x)*Math.sin(angleCollision)*Math.sin(angleCollision);body1.velocity.y=(v2-v1*body1.bounce.y)*Math.sin(angleCollision)*Math.cos(angleCollision)}else{if(!body1.isCircle&&!body2.isCircle||!collisionAsCircle){body1.x-=overlap;body1.velocity.x=v2-v1*body1.bounce.x;if(body2.moves)body1.y+=(body2.y-body2.prev.y)*body2.friction.y}}else if(!body2.immovable)if(body1.isCircle&&body2.isCircle||collisionAsCircle){body2.x+=
overlap>0?body1.deltaAbsX()+body2.deltaAbsX():-(body1.deltaAbsX()+body2.deltaAbsX());body2.velocity.x=(v1-v2*body2.bounce.x)*Math.cos(angleCollision)*Math.cos(angleCollision);body2.velocity.y=(v1-v2*body2.bounce.y)*Math.cos(angleCollision)*Math.sin(angleCollision)}else if(!body1.isCircle&&!body2.isCircle||!collisionAsCircle){body2.x+=overlap;body2.velocity.x=v1-v2*body2.bounce.x;if(body1.moves)body2.y+=(body1.y-body1.prev.y)*body1.friction.y}return true};Phaser.Physics.Arcade.prototype.separateY=
function(body1,body2,overlapOnly){var overlap=this.getOverlapY(body1,body2);if(overlapOnly||overlap===0||body1.immovable&&body2.immovable||body1.customSeparateY||body2.customSeparateY)return overlap!==0;if(body1.isCircle!==body2.isCircle){var collisionAsCircle=false;var rect={};rect.x=body2.isCircle?body1.position.x:body2.position.x;rect.y=body2.isCircle?body1.position.y:body2.position.y;rect.right=body2.isCircle?body1.right:body2.right;rect.bottom=body2.isCircle?body1.bottom:body2.bottom;var circle=
{};circle.x=body1.isCircle?body1.position.x+body1.radius:body2.position.x+body2.radius;circle.y=body1.isCircle?body1.position.y+body1.radius:body2.position.y+body2.radius;if(circle.y<rect.y){if(circle.x<rect.x)collisionAsCircle=true;if(circle.x>rect.right)collisionAsCircle=true}if(circle.y>rect.bottom){if(circle.x<rect.x)collisionAsCircle=true;if(circle.x>rect.right)collisionAsCircle=true}}if(body1.isCircle&&body2.isCircle||collisionAsCircle)var angleCollision=this.angleBetween(body1,body2);var v1=
body1.velocity.y;var v2=body2.velocity.y;if(!body1.immovable&&!body2.immovable)if(body1.isCircle&&body2.isCircle||collisionAsCircle){body1.y-=overlap>0?-(body1.deltaAbsY()+body2.deltaAbsY()):body1.deltaAbsY()+body2.deltaAbsY();body2.y+=overlap>0?body1.deltaAbsY()+body2.deltaAbsY():-(body1.deltaAbsY()+body2.deltaAbsY());var nv1=Math.sqrt(v2*v2*body2.mass/body1.mass)*(v2>0?1:-1);var nv2=Math.sqrt(v1*v1*body1.mass/body2.mass)*(v1>0?1:-1);var avg=(nv1+nv2)*.5;nv1-=avg;nv2-=avg;body1.velocity.x=-(avg+
nv1*body1.bounce.x)*Math.sin(angleCollision)*Math.cos(angleCollision);body1.velocity.y=(avg+nv1*body1.bounce.y)*Math.sin(angleCollision)*Math.sin(angleCollision);body2.velocity.x=(avg+nv2*body2.bounce.x)*Math.sin(angleCollision)*Math.cos(angleCollision);body2.velocity.y=(avg+nv2*body2.bounce.y)*Math.sin(angleCollision)*Math.sin(angleCollision)}else{if(!body1.isCircle&&!body2.isCircle||!collisionAsCircle){overlap*=.5;body1.y-=overlap;body2.y+=overlap;var nv1=Math.sqrt(v2*v2*body2.mass/body1.mass)*
(v2>0?1:-1);var nv2=Math.sqrt(v1*v1*body1.mass/body2.mass)*(v1>0?1:-1);var avg=(nv1+nv2)*.5;nv1-=avg;nv2-=avg;body1.velocity.y=avg+nv1*body1.bounce.y;body2.velocity.y=avg+nv2*body2.bounce.y}}else if(!body1.immovable)if(body1.isCircle&&body2.isCircle||collisionAsCircle){body1.y+=overlap>0?-(body1.deltaAbsY()+body2.deltaAbsY()):body1.deltaAbsY()+body2.deltaAbsY();body1.velocity.x=(v2-v1*body1.bounce.x)*Math.cos(angleCollision)*Math.cos(angleCollision);body1.velocity.y=(v2-v1*body1.bounce.y)*Math.cos(angleCollision)*
Math.sin(angleCollision)}else{if(!body1.isCircle&&!body2.isCircle||!collisionAsCircle){body1.y-=overlap;body1.velocity.y=v2-v1*body1.bounce.y;if(body2.moves)body1.x+=(body2.x-body2.prev.x)*body2.friction.x}}else if(body1.isCircle&&body2.isCircle||collisionAsCircle){body2.y+=overlap>0?body1.deltaAbsY()+body2.deltaAbsY():-(body1.deltaAbsY()+body2.deltaAbsY());body2.velocity.x=(v1-v2*body2.bounce.x)*Math.cos(angleCollision)*Math.cos(angleCollision);body2.velocity.y=(v1-v2*body2.bounce.y)*Math.cos(angleCollision)*
Math.sin(angleCollision)}else if(!body1.isCircle&&!body2.isCircle||!collisionAsCircle){body2.y+=overlap;body2.velocity.y=v1-v2*body2.bounce.y;if(body1.moves)body2.x+=(body1.x-body1.prev.x)*body1.friction.x}return true};Phaser.Physics.Arcade.prototype.distanceBetweenCenters=function(source,target){var dx=source.center.x-target.center.x;var dy=source.center.y-target.center.y;return Math.sqrt(dx*dx+dy*dy)};Phaser.Physics.Arcade.Body.prototype.checkWorldBounds=function(){var pos=this.position;var bounds=
this.game.physics.arcade.bounds;var check=this.game.physics.arcade.checkCollision;if(this.isCircle){var bodyBounds={};bodyBounds.x=this.center.x-this.radius;bodyBounds.y=this.center.y-this.radius;bodyBounds.right=this.center.x+this.radius;bodyBounds.bottom=this.center.y+this.radius;if(bodyBounds.x<bounds.x&&check.left){pos.x=bounds.x-this.halfWidth+this.radius;this.velocity.x*=-this.bounce.x;this.blocked.left=true}else if(bodyBounds.right>bounds.right&&check.right){pos.x=bounds.right-this.halfWidth-
this.radius;this.velocity.x*=-this.bounce.x;this.blocked.right=true}if(bodyBounds.y<bounds.y&&check.up){pos.y=bounds.y-this.halfHeight+this.radius;this.velocity.y*=-this.bounce.y;this.blocked.up=true}else if(bodyBounds.bottom>bounds.bottom&&check.down){pos.y=bounds.bottom-this.halfHeight-this.radius;this.velocity.y*=-this.bounce.y;this.blocked.down=true}}else{if(pos.x<bounds.x&&check.left){pos.x=bounds.x;this.velocity.x*=-this.bounce.x;this.blocked.left=true}else if(this.right>bounds.right&&check.right){pos.x=
bounds.right-this.width;this.velocity.x*=-this.bounce.x;this.blocked.right=true}if(pos.y<bounds.y&&check.up){pos.y=bounds.y;this.velocity.y*=-this.bounce.y;this.blocked.up=true}else if(this.bottom>bounds.bottom&&check.down){pos.y=bounds.bottom-this.height;this.velocity.y*=-this.bounce.y;this.blocked.down=true}}};Phaser.Physics.Arcade.Body.render=function(context,body,color,filled){if(filled===undefined)filled=true;color=color||"rgba(0,255,0,0.4)";if(filled){context.fillStyle=color;if(body.isCircle){context.beginPath();
context.arc(body.center.x-body.game.camera.x,body.center.y-body.game.camera.y,body.radius,0,2*Math.PI,false);context.fill()}else context.fillRect(body.position.x-body.game.camera.x,body.position.y-body.game.camera.y,body.width,body.height)}else{context.strokeStyle=color;if(body.isCircle){context.beginPath();context.arc(body.position.x-body.game.camera.x+body.radius,body.position.y-body.game.camera.y+body.radius,body.radius,0,2*Math.PI,false);context.stroke()}else context.strokeRect(body.position.x-
body.game.camera.x,body.position.y-body.game.camera.y,body.width,body.height)}}})(window,Phaser);